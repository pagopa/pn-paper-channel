AWSTemplateFormatVersion: '2010-09-09'
Description: Some storage with input and output

Parameters:
  ProjectName:
    Type: String
    Description: Nome dell'ambiente destinazione

  # Unused but required by CD pipeline
  MicroserviceNumber:
    Type: Number
    Description: An unique number that identify the microservice inside the ECS cluster.

  # Unused but required by CD pipeline
  TemplateBucketBaseUrl:
    Type: String
    Description: URL da cui caricare i frammenti di template di infrastruttura

  Version:
    Type: String
    Description: 'keep track of used projects commitIds'

  CdcKinesisSourceStreamArn:
    Type: String
    Description: 'Where to send CDC'

Resources:
  PnPaperChannelZoneCapS3Bucket:
    Type: AWS::S3::Bucket
  PnPaperChannelS3CustomResource:
    Type: Custom::PnPaperChannelS3CustomResource
    Properties:
      ServiceToken: !GetAtt PnPaperChannelLoadCSVLambda.Arn
      the_bucket: !Ref PnPaperChannelZoneCapS3Bucket
  PnPaperChannelLoadCSVLambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Description: "Lambda for creating paper-channel CSVs on S3"
      FunctionName: !Sub '${ProjectName}-PaperLoadDataLambda'
      Handler: index.handler
      Role: !GetAtt PnPaperChannelLoadCSVLambdaRole.Arn
      Timeout: 360
      Runtime: python3.9
      Code:
        ZipFile: |
          import boto3
          import cfnresponse
          def handler(event, context):
              # Init ...
              the_event = event['RequestType']
              print("The event is: ", str(the_event))
              response_data = {}
              # Retrieve parameters
              the_bucket = event['ResourceProperties']['the_bucket']
              try:
                  if the_event == 'Create':
                      print("Creating csv file")
                      capsList = [
                          ['PN-PAPER-CHANNEL', '20100', 'Milano'],
                          ['PN-PAPER-CHANNEL', '00100', 'Roma']
                          ]
                      i = 0
                      multiLine = "author,cap,city\n"
                      for item in capsList:
                        newLine = ','.join(map(str, item))
                        if i > 0:
                          multiLine = multiLine + '\n'
                        multiLine = multiLine + newLine
                        i += 1
                      s_3 = boto3.resource('s3')
                      s_3.Object(the_bucket, 'caps-1.csv').put(Body=multiLine)
                      zonesList = [
                          ['Zona 1', 'Albania', 'Albania'],
                          ['Zona 1', 'Andorra', 'Andorra'],
                          ['Zona 1', 'Austria', 'Austria'],
                          ['Zona 1', 'Azzorre', 'Azzorre'],
                          ['Zona 1', 'Belgio', 'Belgio'],
                          ['Zona 1', 'Bielorussia', 'Bielorussia'],
                          ['Zona 1', 'Bosnia-Erzegovina', 'Bosnia-Erzegovina'],
                          ['Zona 1', 'Bulgaria', 'Bulgaria'],
                          ['Zona 1', 'Cipro', 'Cipro'],
                          ['Zona 1', 'Croazia', 'Croazia'],
                          ['Zona 1', 'Danimarca', 'Danimarca'],
                          ['Zona 1', 'Estonia', 'Estonia'],
                          ['Zona 1', 'Faroe (Isole)', 'Faroe (Isole)'],
                          ['Zona 1', 'Finlandia', 'Finlandia'],
                          ['Zona 1', 'Francia', 'Francia'],
                          ['Zona 1', 'Germania', 'Germania'],
                          ['Zona 1', 'Gibilterra', 'Gibilterra'],
                          ['Zona 1', 'Gran Bretagna e Irlanda del Nord', 'Gran Bretagna e Irlanda del Nord'],
                          ['Zona 1', 'Grecia', 'Grecia'],
                          ['Zona 1', 'Guernsey', 'Guernsey'],
                          ['Zona 1', 'Irlanda', 'Irlanda'],
                          ['Zona 1', 'Islanda', 'Islanda'],
                          ['Zona 1', 'Jersey', 'Jersey'],
                          ['Zona 1', 'Lettonia', 'Lettonia'],
                          ['Zona 1', 'Liechtenstein', 'Liechtenstein'],
                          ['Zona 1', 'Lituania', 'Lituania'],
                          ['Zona 1', 'Lussemburgo', 'Lussemburgo'],
                          ['Zona 1', 'Macedonia del Nord', 'Macedonia del Nord'],
                          ['Zona 1', 'Malta', 'Malta'],
                          ['Zona 1', 'Man Isole - Gran Bretagna UE', 'Man Isole - Gran Bretagna UE'],
                          ['Zona 1', 'Moldavia', 'Moldavia'],
                          ['Zona 1', 'Monaco', 'Monaco'],
                          ['Zona 1', 'Montenegro', 'Montenegro'],
                          ['Zona 1', 'Norvegia', 'Norvegia'],
                          ['Zona 1', 'Olanda', 'Olanda'],
                          ['Zona 1', 'Polonia', 'Polonia'],
                          ['Zona 1', 'Portogallo', 'Portogallo'],
                          ['Zona 1', 'Repubblica Ceca', 'Repubblica Ceca'],
                          ['Zona 1', 'Repubblica San Marino*', 'Repubblica San Marino*'],
                          ['Zona 1', 'Romania', 'Romania'],
                          ['Zona 1', 'Russia', 'Russia'],
                          ['Zona 1', 'Serbia', 'Serbia'],
                          ['Zona 1', 'Slovacchia', 'Slovacchia'],
                          ['Zona 1', 'Slovenia', 'Slovenia'],
                          ['Zona 1', 'Spagna', 'Spagna'],
                          ['Zona 1', 'Svezia', 'Svezia'],
                          ['Zona 1', 'Svizzera', 'Svizzera'],
                          ['Zona 1', 'Turchia', 'Turchia'],
                          ['Zona 1', 'Ucraina', 'Ucraina'],
                          ['Zona 1', 'Ungheria', 'Ungheria'],
                          ['Zona 1', 'Vaticano*', 'Vaticano*'],
                          ['Zona 1', 'Algeria', 'Algeria'],
                          ['Zona 1', 'Egitto', 'Egitto'],
                          ['Zona 1', 'Giordania', 'Giordania'],
                          ['Zona 1', 'Israele', 'Israele'],
                          ['Zona 1', 'Libano', 'Libano'],
                          ['Zona 1', 'Libia', 'Libia'],
                          ['Zona 1', 'Marocco', 'Marocco'],
                          ['Zona 1', 'Tunisia', 'Tunisia'],
                          ['Zona 2', 'Angola', 'Angola'],
                          ['Zona 2', 'Ascension - Isole (Uk)', 'Ascension - Isole (Uk)'],
                          ['Zona 2', 'Benin', 'Benin'],
                          ['Zona 2', 'Botswana', 'Botswana'],
                          ['Zona 2', 'Burkina Faso', 'Burkina Faso'],
                          ['Zona 2', 'Burundi', 'Burundi'],
                          ['Zona 2', 'Camerun', 'Camerun'],
                          ['Zona 2', 'Capo Verde', 'Capo Verde'],
                          ['Zona 2', 'Ciad', 'Ciad'],
                          ['Zona 2', 'Comore', 'Comore'],
                          ['Zona 2', 'Congo (Rep. Popolare)', 'Congo (Rep. Popolare)'],
                          ['Zona 2', 'Costa D''Avorio', 'Costa D''Avorio'],
                          ['Zona 2', 'Eritrea', 'Eritrea'],
                          ['Zona 2', 'Etiopia', 'Etiopia'],
                          ['Zona 2', 'Gabon', 'Gabon'],
                          ['Zona 2', 'Gambia', 'Gambia'],
                          ['Zona 2', 'Ghana', 'Ghana'],
                          ['Zona 2', 'Gibuti', 'Gibuti'],
                          ['Zona 2', 'Guinea', 'Guinea'],
                          ['Zona 2', 'Guinea Bissau', 'Guinea Bissau'],
                          ['Zona 2', 'Giunea Equatoriale', 'Giunea Equatoriale'],
                          ['Zona 2', 'Kenya', 'Kenya'],
                          ['Zona 2', 'Lesotho', 'Lesotho'],
                          ['Zona 2', 'Liberia', 'Liberia'],
                          ['Zona 2', 'Madagascar', 'Madagascar'],
                          ['Zona 2', 'Malawi', 'Malawi'],
                          ['Zona 2', 'Mali', 'Mali'],
                          ['Zona 2', 'Mauritania', 'Mauritania'],
                          ['Zona 2', 'Mauritius', 'Mauritius'],
                          ['Zona 2', 'Mayotte', 'Mayotte'],
                          ['Zona 2', 'Mozambico', 'Mozambico'],
                          ['Zona 2', 'Namibia', 'Namibia'],
                          ['Zona 2', 'Niger', 'Niger'],
                          ['Zona 2', 'Nigeria', 'Nigeria'],
                          ['Zona 2', 'Repubblica Centrafricana', 'Repubblica Centrafricana'],
                          ['Zona 2', 'Repubblica Del Congo', 'Repubblica Del Congo'],
                          ['Zona 2', 'Reunion (Isole)', 'Reunion (Isole)'],
                          ['Zona 2', 'Ruanda', 'Ruanda'],
                          ['Zona 2', 'Sant''Elena (Isola Di)', 'Sant''Elena (Isola Di)'],
                          ['Zona 2', 'S. Tommaso E Principe', 'S. Tommaso E Principe'],
                          ['Zona 2', 'Senegal', 'Senegal'],
                          ['Zona 2', 'Seychelles', 'Seychelles'],
                          ['Zona 2', 'Sierra Leone', 'Sierra Leone'],
                          ['Zona 2', 'Sud Africa', 'Sud Africa'],
                          ['Zona 2', 'Sudan', 'Sudan'],
                          ['Zona 2', 'Sud Sudan', 'Sud Sudan'],
                          ['Zona 2', 'Swaziland', 'Swaziland'],
                          ['Zona 2', 'Tanzania', 'Tanzania'],
                          ['Zona 2', 'Territorio Britannico dell''Oceano Indiano', 'Territorio Britannico dell''Oceano Indiano'],
                          ['Zona 2', 'Togo', 'Togo'],
                          ['Zona 2', 'Tristan Da Cunha', 'Tristan Da Cunha'],
                          ['Zona 2', 'Uganda', 'Uganda'],
                          ['Zona 2', 'Zambia', 'Zambia'],
                          ['Zona 2', 'Zimbabwe', 'Zimbabwe'],
                          ['Zona 2', 'Anguilla', 'Anguilla'],
                          ['Zona 2', 'Antigua & Barbuda', 'Antigua & Barbuda'],
                          ['Zona 2', 'Argentina', 'Argentina'],
                          ['Zona 2', 'Aruba', 'Aruba'],
                          ['Zona 2', 'Bahamas', 'Bahamas'],
                          ['Zona 2', 'Barbados', 'Barbados'],
                          ['Zona 2', 'Belize', 'Belize'],
                          ['Zona 2', 'Bermuda', 'Bermuda'],
                          ['Zona 2', 'Bolivia', 'Bolivia'],
                          ['Zona 2', 'Bonaire - (Antille Olandesi)', 'Bonaire - (Antille Olandesi)'],
                          ['Zona 2', 'Brasile', 'Brasile'],
                          ['Zona 2', 'Canada', 'Canada'],
                          ['Zona 2', 'Cayman Islands', 'Cayman Islands'],
                          ['Zona 2', 'Cile', 'Cile'],
                          ['Zona 2', 'Colombia', 'Colombia'],
                          ['Zona 2', 'Costa Rica', 'Costa Rica'],
                          ['Zona 2', 'Cuba', 'Cuba'],
                          ['Zona 2', 'Curacao', 'Curacao'],
                          ['Zona 2', 'Dominica', 'Dominica'],
                          ['Zona 2', 'Ecuador', 'Ecuador'],
                          ['Zona 2', 'El Salvador', 'El Salvador'],
                          ['Zona 2', 'Falklands (Isole)', 'Falklands (Isole)'],
                          ['Zona 2', 'Giamaica', 'Giamaica'],
                          ['Zona 2', 'Grenada', 'Grenada'],
                          ['Zona 2', 'Groenlandia', 'Groenlandia'],
                          ['Zona 2', 'Guadalupa', 'Guadalupa'],
                          ['Zona 2', 'Guantanamo Bay', 'Guantanamo Bay'],
                          ['Zona 2', 'Guatemala', 'Guatemala'],
                          ['Zona 2', 'Guyana', 'Guyana'],
                          ['Zona 2', 'Guyana (Francese)', 'Guyana (Francese)'],
                          ['Zona 2', 'Haiti', 'Haiti'],
                          ['Zona 2', 'Honduras', 'Honduras'],
                          ['Zona 2', 'Martinica', 'Martinica'],
                          ['Zona 2', 'Messico', 'Messico'],
                          ['Zona 2', 'Montserrat', 'Montserrat'],
                          ['Zona 2', 'Nicaragua', 'Nicaragua'],
                          ['Zona 2', 'Panama', 'Panama'],
                          ['Zona 2', 'Paraguay', 'Paraguay'],
                          ['Zona 2', 'Peru', 'Peru'],
                          ['Zona 2', 'Porto Rico', 'Porto Rico'],
                          ['Zona 2', 'Repubblica Dominicana', 'Repubblica Dominicana'],
                          ['Zona 2', 'Saba - (Antille Olandesi)', 'Saba - (Antille Olandesi)'],
                          ['Zona 2', 'Saint Barthelemy - (St. Barth)', 'Saint Barthelemy - (St. Barth)'],
                          ['Zona 2', 'Saitn Eustatius - (Antille Olandesi)', 'Saitn Eustatius - (Antille Olandesi)'],
                          ['Zona 2', 'S. Cristoforo', 'S. Cristoforo'],
                          ['Zona 2', 'Saint Lucia', 'Saint Lucia'],
                          ['Zona 2', 'Saint Pierre & Miquelon', 'Saint Pierre & Miquelon'],
                          ['Zona 2', 'Saint Vincent (E Granadines)', 'Saint Vincent (E Granadines)'],
                          ['Zona 2', 'Samoa Britanniche', 'Samoa Britanniche'],
                          ['Zona 2', 'Sint Maarten', 'Sint Maarten'],
                          ['Zona 2', 'South Georgia and The South Sandwich Islands', 'South Georgia and The South Sandwich Islands'],
                          ['Zona 2', 'Stati Uniti', 'Stati Uniti'],
                          ['Zona 2', 'Suriname', 'Suriname'],
                          ['Zona 2', 'Trinidad & Tobago', 'Trinidad & Tobago'],
                          ['Zona 2', 'Turks And Caicos Is.', 'Turks And Caicos Is.'],
                          ['Zona 2', 'Uruguay', 'Uruguay'],
                          ['Zona 2', 'Venezuela', 'Venezuela'],
                          ['Zona 2', 'Vergini (Isole) - Br', 'Vergini (Isole) - Br'],
                          ['Zona 2', 'Vergini (Isole) Usa - (St. Tomas & St. Croix)', 'Vergini (Isole) Usa - (St. Tomas & St. Croix)'],
                          ['Zona 2', 'Afghanistan', 'Afghanistan'],
                          ['Zona 2', 'Arabia Saudita', 'Arabia Saudita'],
                          ['Zona 2', 'Armenia', 'Armenia'],
                          ['Zona 2', 'Azerbaidjan', 'Azerbaidjan'],
                          ['Zona 2', 'Bahrain', 'Bahrain'],
                          ['Zona 2', 'Bangladesh', 'Bangladesh'],
                          ['Zona 2', 'Bhutan', 'Bhutan'],
                          ['Zona 2', 'Brunei', 'Brunei'],
                          ['Zona 2', 'Cambogia', 'Cambogia'],
                          ['Zona 2', 'China', 'China'],
                          ['Zona 2', 'Corea Del Nord - Rep. Dem.', 'Corea Del Nord - Rep. Dem.'],
                          ['Zona 2', 'Corea del Sud', 'Corea del Sud'],
                          ['Zona 2', 'Emirati Arabi Uniti', 'Emirati Arabi Uniti'],
                          ['Zona 2', 'Filippine', 'Filippine'],
                          ['Zona 2', 'Georgia', 'Georgia'],
                          ['Zona 2', 'Giappone', 'Giappone'],
                          ['Zona 2', 'Hong Kong', 'Hong Kong'],
                          ['Zona 2', 'India', 'India'],
                          ['Zona 2', 'Indonesia', 'Indonesia'],
                          ['Zona 2', 'Iran', 'Iran'],
                          ['Zona 2', 'Iraq', 'Iraq'],
                          ['Zona 2', 'Kazakistan', 'Kazakistan'],
                          ['Zona 2', 'Kirghizistan', 'Kirghizistan'],
                          ['Zona 2', 'Kuwait', 'Kuwait'],
                          ['Zona 2', 'Laos', 'Laos'],
                          ['Zona 2', 'Macao', 'Macao'],
                          ['Zona 2', 'Maldive', 'Maldive'],
                          ['Zona 2', 'Malesia', 'Malesia'],
                          ['Zona 2', 'Mongolia', 'Mongolia'],
                          ['Zona 2', 'Myanmar Burnma (Birmania)', 'Myanmar Burnma (Birmania)'],
                          ['Zona 2', 'Nepal', 'Nepal'],
                          ['Zona 2', 'Oman', 'Oman'],
                          ['Zona 2', 'Pakistan', 'Pakistan'],
                          ['Zona 2', 'Qatar', 'Qatar'],
                          ['Zona 2', 'Singapore', 'Singapore'],
                          ['Zona 2', 'Sri Lanka', 'Sri Lanka'],
                          ['Zona 2', 'Tagikistan', 'Tagikistan'],
                          ['Zona 2', 'Taiwan', 'Taiwan'],
                          ['Zona 2', 'Thailandia', 'Thailandia'],
                          ['Zona 2', 'Timor Orientale (Est)', 'Timor Orientale (Est)'],
                          ['Zona 2', 'Turkmenistan', 'Turkmenistan'],
                          ['Zona 2', 'Uzbekistan', 'Uzbekistan'],
                          ['Zona 2', 'Vietnam', 'Vietnam'],
                          ['Zona 3', 'Australia', 'Australia'],
                          ['Zona 3', 'Cook (Isole)', 'Cook (Isole)'],
                          ['Zona 3', 'Fiji (Isole)', 'Fiji (Isole)'],
                          ['Zona 3', 'Guam', 'Guam'],
                          ['Zona 3', 'Kiribati', 'Kiribati'],
                          ['Zona 3', 'Marshall (Isole)', 'Marshall (Isole)'],
                          ['Zona 3', 'Micronesia (Isole Caroline)', 'Micronesia (Isole Caroline)'],
                          ['Zona 3', 'Nauru', 'Nauru'],
                          ['Zona 3', 'Niue', 'Niue'],
                          ['Zona 3', 'Norfolk Island', 'Norfolk Island'],
                          ['Zona 3', 'Nuova Caledonia', 'Nuova Caledonia'],
                          ['Zona 3', 'Nuova Zelanda', 'Nuova Zelanda'],
                          ['Zona 3', 'Palau', 'Palau'],
                          ['Zona 3', 'Papua Nuova Guinea', 'Papua Nuova Guinea'],
                          ['Zona 3', 'Pitcairn', 'Pitcairn'],
                          ['Zona 3', 'Polinesia (Francese)', 'Polinesia (Francese)'],
                          ['Zona 3', 'Saipan (Isole Marianne)', 'Saipan (Isole Marianne)'],
                          ['Zona 3', 'Salomone (Isole)', 'Salomone (Isole)'],
                          ['Zona 3', 'Samoa (Americane)', 'Samoa (Americane)'],
                          ['Zona 3', ' Scattered Islands', ' Scattered Islands'],
                          ['Zona 3', 'Terre Australi e Antartiche Francesi', 'Terre Australi e Antartiche Francesi'],
                          ['Zona 3', 'Tokelau', 'Tokelau'],
                          ['Zona 3', 'Tonga (Isole)', 'Tonga (Isole)'],
                          ['Zona 3', 'Tuvalu', 'Tuvalu'],
                          ['Zona 3', 'Vanuatu', 'Vanuatu'],
                          ['Zona 3', 'Wake', 'Wake'],
                          ['Zona 3', 'Wallis & Futuna (Isole)', 'Wallis & Futuna (Isole)'],
                      ]
                      i = 0
                      multiLine = "zone,countryIt,countryEn\n"
                      for item in zonesList:
                        newLine = ','.join(map(str, item))
                        if i > 0:
                          multiLine = multiLine + '\n'
                        multiLine = multiLine + newLine
                        i += 1
                      s_3.Object(the_bucket, 'zones-1.csv').put(Body=multiLine)
                  elif the_event == 'Delete':
                      print("Deleting S3 content...")
                      b_operator = boto3.resource('s3')
                      b_operator.Bucket(str(the_bucket)).objects.all().delete()
                  # Everything OK... send the signal back
                  print("Operation successful!")
                  cfnresponse.send(event,
                                   context,
                                   cfnresponse.SUCCESS,
                                   response_data)
              except Exception as e:
                  print("Operation failed...")
                  print(str(e))
                  response_data['Data'] = str(e)
                  cfnresponse.send(event,
                                   context,
                                   cfnresponse.FAILED,
                                   response_data)
  PnPaperChannelLoadCSVLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-PnPaperChannelLoadCSVLambdaRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: !Sub ${ProjectName}-PnPaperChannelLoadCSVLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: CanWriteLogs
                Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"
              - Sid: CanWriteS3
                Effect: "Allow"
                Action:
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:List*
                Resource:
                  - !Sub arn:aws:s3:::${PnPaperChannelZoneCapS3Bucket}/*
                  - !Sub arn:aws:s3:::${PnPaperChannelZoneCapS3Bucket}
  PaperDeliveryDriversBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      ObjectLockEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - "*"
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
            AllowedOrigins:
              - "*"
            ExposedHeaders:
              - "x-amz-version-id"

  PCKmsEncDecDynamoDataKey:
    Type: 'AWS::KMS::Key'
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      Description: A symmetric encryption KMS key AES-256-GCM
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'kms:*'
            Resource: '*'

  # Application use this alias to access the public key
  PCKmsEncDecDynamoDataKeyAlias:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: !Sub 'alias/${ProjectName}-paper-channel-dynamo'
      TargetKeyId: !Ref PCKmsEncDecDynamoDataKey

  # Internal queues
  ScheduledRequestsQueue:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub "${TemplateBucketBaseUrl}/fragments/sqs-queue.yaml"
      Parameters:
        QueueName: !Sub '${ProjectName}-paper_channel_requests'
        DelaySeconds: 1

  RequestDeliveryDynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-PaperRequestDelivery'
      AttributeDefinitions:
        - AttributeName: "requestId"
          AttributeType: "S"
        - AttributeName: "fiscalCode"
          AttributeType: "S"
        - AttributeName: "correlationId"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "requestId"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      GlobalSecondaryIndexes:
        - IndexName: "fiscal-code-index"
          KeySchema:
            - AttributeName: "fiscalCode"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
        - IndexName: "correlation-index"
          KeySchema:
            - AttributeName: "correlationId"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
      KinesisStreamSpecification:
        StreamArn: !Ref CdcKinesisSourceStreamArn
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  AddressDynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-PaperAddress'
      AttributeDefinitions:
        - AttributeName: "requestId"
          AttributeType: "S"
        - AttributeName: "addressType"
          AttributeType: "S"
      TimeToLiveSpecification:
        AttributeName: "ttl"
        Enabled: true
      KeySchema:
        - AttributeName: "requestId"
          KeyType: "HASH"
        - AttributeName: "addressType"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      KinesisStreamSpecification:
        StreamArn: !Ref CdcKinesisSourceStreamArn
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  TenderDynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-PaperTender'
      AttributeDefinitions:
        - AttributeName: "tenderCode"
          AttributeType: "S"
        - AttributeName: "author"
          AttributeType: "S"
        - AttributeName: "date"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "tenderCode"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "author-index"
          KeySchema:
            - AttributeName: "author"
              KeyType: "HASH"
            - AttributeName: "date"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      KinesisStreamSpecification:
        StreamArn: !Ref CdcKinesisSourceStreamArn
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  DeliveryDriverDynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-PaperDeliveryDriver'
      AttributeDefinitions:
        - AttributeName: "uniqueCode"
          AttributeType: "S"
        - AttributeName: "tenderCode"
          AttributeType: "S"
        - AttributeName: "author"
          AttributeType: "S"
        - AttributeName: "startDate"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "uniqueCode"
          KeyType: "HASH"
        - AttributeName: "tenderCode"
          KeyType: "RANGE"
      GlobalSecondaryIndexes:
        - IndexName: "author-index"
          KeySchema:
            - AttributeName: "author"
              KeyType: "HASH"
            - AttributeName: "startDate"
              KeyType: "RANGE"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
        - IndexName: "tender-index"
          KeySchema:
            - AttributeName: "tenderCode"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      KinesisStreamSpecification:
        StreamArn: !Ref CdcKinesisSourceStreamArn
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  CostDynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-PaperCost'
      AttributeDefinitions:
        - AttributeName: "driverCode"
          AttributeType: "S"
        - AttributeName: "uuidCode"
          AttributeType: "S"
        - AttributeName: "tenderCode"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "driverCode"
          KeyType: "HASH"
        - AttributeName: "uuidCode"
          KeyType: "RANGE"
      GlobalSecondaryIndexes:
        - IndexName: "tender-index"
          KeySchema:
            - AttributeName: "tenderCode"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      KinesisStreamSpecification:
        StreamArn: !Ref CdcKinesisSourceStreamArn
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  ZoneDynamoTable:
    Type: AWS::DynamoDB::Table
    DependsOn: PnPaperChannelS3CustomResource
    Properties:
      TableName: !Sub '${ProjectName}-PaperZone'
      AttributeDefinitions:
        - AttributeName: "countryIt"
          AttributeType: "S"
        - AttributeName: "countryEn"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "countryIt"
          KeyType: "HASH"
      GlobalSecondaryIndexes:
        - IndexName: "countryEn-index"
          KeySchema:
            - AttributeName: "countryEn"
              KeyType: "HASH"
          Projection:
            ProjectionType: "ALL"
          ProvisionedThroughput:
            ReadCapacityUnits: "5"
            WriteCapacityUnits: "5"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      KinesisStreamSpecification:
        StreamArn: !Ref CdcKinesisSourceStreamArn
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      ImportSourceSpecification:
        InputFormat: 'CSV'
        InputFormatOptions:
          Csv:
            Delimiter: ','
        S3BucketSource:
          S3Bucket: !Ref PnPaperChannelZoneCapS3Bucket
          S3KeyPrefix: 'zones'
  CapDynamoTable:
    Type: AWS::DynamoDB::Table
    DependsOn: PnPaperChannelS3CustomResource
    Properties:
      TableName: !Sub '${ProjectName}-PaperCap'
      AttributeDefinitions:
        - AttributeName: "author"
          AttributeType: "S"
        - AttributeName: "cap"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "author"
          KeyType: "HASH"
        - AttributeName: "cap"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      KinesisStreamSpecification:
        StreamArn: !Ref CdcKinesisSourceStreamArn
      StreamSpecification:
        StreamViewType: NEW_IMAGE
      ImportSourceSpecification:
        InputFormat: 'CSV'
        InputFormatOptions:
          Csv:
            Delimiter: ','
        S3BucketSource:
          S3Bucket: !Ref PnPaperChannelZoneCapS3Bucket
          S3KeyPrefix: 'caps'
  DeliveryFileDynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-PaperDeliveryFile'
      AttributeDefinitions:
        - AttributeName: "uuid"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "uuid"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      KinesisStreamSpecification:
        StreamArn: !Ref CdcKinesisSourceStreamArn
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  PaperRequestErrorDynamoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub '${ProjectName}-PaperRequestError'
      AttributeDefinitions:
        - AttributeName: "requestId"
          AttributeType: "S"
        - AttributeName: "created"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "requestId"
          KeyType: "HASH"
        - AttributeName: "created"
          KeyType: "RANGE"
      ProvisionedThroughput:
        ReadCapacityUnits: "5"
        WriteCapacityUnits: "5"
      KinesisStreamSpecification:
        StreamArn: !Ref CdcKinesisSourceStreamArn
      StreamSpecification:
        StreamViewType: NEW_IMAGE

Outputs:
  PaperDeliveryDriversBucketName:
    Description: Name of s3 bucket
    Value: !Ref PaperDeliveryDriversBucket

  # Scheduled Requests
  ScheduledRequestsQueueName:
    Value: !GetAtt ScheduledRequestsQueue.Outputs.QueueName
    Description: pn-paper-channel input queue name
  ScheduledRequestsQueueURL:
    Value: !GetAtt ScheduledRequestsQueue.Outputs.QueueURL
    Description: pn-paper-channel input queue URL
  ScheduledRequestsQueueARN:
    Value: !GetAtt ScheduledRequestsQueue.Outputs.QueueARN
    Description: pn-paper-channel input queue ARN

  PCKmsEncDecDynamoDataKeyARN:
    Description: Name of KMS Key for Dynamo encode/decode data
    Value: !Sub '${PCKmsEncDecDynamoDataKey.Arn}'

  RequestDeliveryDynamoTableName:
    Description: Name of dynamodb table containing request
    Value: !Ref RequestDeliveryDynamoTable

  RequestDeliveryDynamoTableArn:
    Description: ARN of dynamodb table containing request
    Value: !Sub '${RequestDeliveryDynamoTable.Arn}'

  PaperRequestErrorTableName:
    Description: Name of dynamodb table containing request error
    Value: !Ref PaperRequestErrorDynamoTable

  PaperRequestErrorTableArn:
    Description: ARN of dynamodb table containing request error
    Value: !Sub '${PaperRequestErrorDynamoTable.Arn}'

  DeliveryFileDynamoTableName:
    Description: Name of dynamodb table containing file request
    Value: !Ref DeliveryFileDynamoTable

  DeliveryFileDynamoTableArn:
    Description: ARN of dynamodb table containing file request
    Value: !Sub '${DeliveryFileDynamoTable.Arn}'

  AddressDynamoTableName:
    Description: Name of dynamodb table containing address of request delivery
    Value: !Ref AddressDynamoTable

  AddressDynamoTableArn:
    Description: ARN of dynamodb table containing address of request delivery
    Value: !Sub '${AddressDynamoTable.Arn}'

  TenderDynamoTableName:
    Description: Name of dynamodb table containing tenders
    Value: !Ref TenderDynamoTable

  TenderDynamoTableArn:
    Description: ARN of dynamodb table containing tenders
    Value: !Sub '${TenderDynamoTable.Arn}'

  DeliveryDriverDynamoTableName:
    Description: Name of dynamodb table containing delivery drivers
    Value: !Ref DeliveryDriverDynamoTable

  DeliveryDriverDynamoTableArn:
    Description: ARN of dynamodb table containing delivery drivers
    Value: !Sub '${DeliveryDriverDynamoTable.Arn}'

  CostDynamoTableName:
    Description: Name of dynamodb table containing cost
    Value: !Ref CostDynamoTable

  CostDynamoTableArn:
    Description: ARN of dynamodb table containing cost
    Value: !Sub '${CostDynamoTable.Arn}'

  ZoneDynamoTableName:
    Description: Name of dynamodb table containing zone
    Value: !Ref ZoneDynamoTable

  ZoneDynamoTableArn:
    Description: ARN of dynamodb table containing zone
    Value: !Sub '${ZoneDynamoTable.Arn}'

  CapDynamoTableName:
    Description: Name of dynamodb table containing cap
    Value: !Ref CapDynamoTable

  CapDynamoTableArn:
    Description: ARN of dynamodb table containing cap
    Value: !Sub '${CapDynamoTable.Arn}'
