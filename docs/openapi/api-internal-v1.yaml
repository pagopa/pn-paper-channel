openapi: 3.0.3
info:
  title: PaperChannel
  description: >-
    ## Abstract
      Questo servizio permette di inviare richieste di invio cartaceo in modo asyncrono e ricevere aggiornamenti
      sul loro stato di avanzamento. Nello specifico: <br/>
          - Raccomandata Internazionale, <br/>
          - Raccomandata Semplice, <br/>
          - Raccomandata con ricevuta di ritorno, <br/>
          - Raccomandata a norma di legge 890/1982. <br/>
  license:
    name: PN software license
    url: 'https://www.pn.pagopa.it/LICENSE'
  version: v1.0
servers:
  - url: >-
      https://api.paperchannel.pagopa.local
    description: Server url
tags:
  - name: PaperMessages
    description: Operazioni per inviare e monitorare messaggi di corrispondenza cartacea
paths:

    #############################################################################################
    ###                                  PAPER MAIL MESSAGES                                  ###
    #############################################################################################
  /paper-channel/v1/paper-deliveries-send/{pathRequestId}/engageid/{pathRequestId}:
    parameters:
      - $ref: '#/components/parameters/pathRequestId'
      - $ref: '#/components/parameters/pathEngageId'
    post:
      operationId: sendPaperEngageSendRequest
      tags:
        - PaperMessages
      summary: Invio di corrispondenza cartacea
      description: >-
        Questa operazione sottomette ad paper-channel una richiesta di invio di corrispondenza
        cartacea precedentemente calcolata. <br/>
        Paper channel deve validare la richiesta in base alla coppia requestIdx - engageId passati e,
        se tale validazione ha successo, registrare la richiesta in maniera sincrona invocando external-channel.
        Se l'invocazione a external-channel ha successo, a questo punto può tornare nella response il costo in eurocent
        e l'indirizzo effettivo a cui verrà inviata la comunicazione cartacea.
        Se vengono inviate molteplici richieste con lo stesso requestId e lo stesso engageId solo una deve avere successo
        (status code HTTP 200, le altre devono ricevere lo status code 409).
    responses:
      '200':
        $ref: '#/components/responses/EngageSendResponse'
      '400':
        $ref: '#/components/responses/EngageSendResponseBad'
      '404':
        $ref: '#/components/responses/EngageSendResponseNotFound'
      '409':
        $ref: '#/components/responses/EngageSendResponseDuplicated'
    callbacks:
      deliveryStatusPushUpdates:
        'indirizzo_webhook_oppure_coda_sqs_legato_al_valore_header_xPagopaExtchCxId':
          post:
            summary: Eventi avanzamento spediti ad SQS
            requestBody:
              content:
                application/json:
                  schema:
                    type: array
                    minItems: 1
                    maxItems: 1000
                    items:
                      $ref: '#/components/schemas/PaperChannelUpdate'
              required: true
            responses:
              default:
                description: Error processing the update, the update must be re-sended
              '200':
                description: Update correctly received
              '400':
                description: Malformed update status

  /paper-channel/v1/paper-deliveries-prepare/{pathRequestId}:
    parameters:
      - $ref: '#/components/parameters/pathRequestId'
    post:
      operationId: sendPaperEngagePrepareRequest
      tags:
        - PaperMessages
      summary: Invio di corrispondenza cartacea - richiesta di validazione e praparazione all'invio
      description: >- 
        Questa operazione sottomette ad paper-channel una richiesta preparazione di invio di corrispondenza
        cartacea. <br/>
        Paper channel deve validare la sintatticamente la richiesta e se tale validazione ha successo, ritornare
        l'OK di presa in carico.
        In asincrono poi, dovrà eventualmente recuperare le informazioni da pn-national-registries, calcolare le pagine
        da inviare, e se l'utente ha un indirizzo valido predisporre un engageId da ritornare tramite eventi a coda SQS
        e/o tramite richiesta di lettura.
        Se vengono inviate molteplici richieste con lo stesso requestId solo una deve avere successo (status code HTTP 204, le
        altre devono ricevere lo status code 409).
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaperPrepareRequest'
        required: true
      responses:
        '204':
        '400':
          $ref: '#/components/responses/EngagePrepareResponseBad'
        '409':
          $ref: '#/components/responses/EngagePrepareResponseDuplicated'
      callbacks:
        deliveryStatusPushUpdates:
          'indirizzo_webhook_oppure_coda_sqs_legato_al_valore_header_xPagopaExtchCxId':
            post:
              summary: Eventi avanzamento spediti ad SQS
              requestBody:
                content:
                  application/json:
                    schema:
                      type: array
                      minItems: 1
                      maxItems: 1000
                      items:
                        $ref: '#/components/schemas/SingleStatusUpdate'
                required: true
              responses:
                default:
                  description: Error processing the update, the update must be re-sended
                '200':
                  description: Update correctly received
                '400':
                  description: Malformed update status
    
    get:
      operationId: getPaperEngageProgresses
      tags:
        - PaperMessages
      summary: Pull avanzamenti messaggi cartacei
      description: >- 
        Questa richiesta permette di ottenere l'elenco degli eventi salienti 
        riguardanti un processo di postalizzazione. <br/>
        Oltre all'elenco degli eventi si ottengono informazioni sulle cause di tali eventi 
        e URL per effettuare il download delle scansioni digitali dei documenti prodotti 
        durante il processo di postalizzazione. <br>
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaperProgressStatusEvent'
        '404':
          $ref: '#/components/responses/getDeliveryStatusHistoryNotFound'

components:
  
    #############################################################################################
    ###             PARAMETRI E RISPOSTE IN COMUNE PER TUTTI I TIPI DI MESSAGGIO              ###
    #############################################################################################
  parameters:

    pathRequestId:
      name: requestId
      in: path
      required: true
      schema:
        type: string
        minLength: 5
        maxLength: 100
    pathEngageId:
      name: engageId
      in: path
      required: true
      schema:
        type: string
        minLength: 5
        maxLength: 100
  
  responses:
    
    EngageSendResponse:
      cost:
        description: ammontare in eurocent del costo per l'invio della notifica in forma cartacea
        type: number
      receiverAddress:
        description: indirizzo al quale verrà spedita la notifica
        type: object
        schema:
          $ref: '#/components/schemas/AnalogAddress'

    
    EngageSendResponseBad:
      description: Errore di validazione sintattica della richiesta
      content:
        application/json:
          schema:
            $ref: 'remote-refs.yaml#/components/schemas/Problem'

    EngageSendResponseDuplicated:
      description: >-
        Indica che la richiesta è già stata effettuata e non può essere sovrascritta.
      content:
        application/json:
          schema:
            $ref: 'remote-refs.yaml#/components/schemas/Problem'


    EngageSendResponseNotFound:
      description: >-
        Indica che la richiesta con la coppia requestIdx-engageId non è stata trovata
      content:
        application/json:
          schema:
            $ref: 'remote-refs.yaml#/components/schemas/Problem'

    EngagePrepareResponseBad:
      description: Errore di validazione sintattica della richiesta
      content:
        application/json:
          schema:
            $ref: 'remote-refs.yaml#/components/schemas/Problem'

    EngagePrepareResponseDuplicated:
      description: >-
        Indica che la richiesta è già stata effettuata e non può essere sovrascritta.
      content:
        application/json:
          schema:
            $ref: 'remote-refs.yaml#/components/schemas/Problem'
  
  schemas:

    ######################################################
    ### - DTO PER RICEZIONE ASINCRONA AVANZAMENTI RICHIESTE
    ######################################################

    PaperChannelUpdate:
      description: oggetto usato per ricevere un evento nella coda. >-
          Prevede di valorizzare solo uno dei tipi di eventi possibili
      type: object
      properties:
        EngagePrepareEvent:
          $ref: '#/components/schemas/PrepareEvent'
        EngageSendEvent:
          $ref: '#/components/schemas/SendEvent'
    

    ### - RIFERIMENTI AD ALTRI FILE
    ######################################################
    PrepareEvent:
      $ref: 'schemas-paper-v1.yaml#/components/schemas/PrepareEvent'
    SendEvent:
      $ref: 'schemas-paper-v1.yaml#/components/schemas/SendEvent'
    PaperPrepareRequest:
      $ref: 'schemas-paper-v1.yaml#/components/schemas/PaperPrepareRequest'
    AnalogAddress:
      $ref: 'schemas-paper-v1.yaml#/components/schemas/AnalogAddress'
    

#  securitySchemes:        # ONLY EXTERNAL
#    ApiKeyAuth:           # ONLY EXTERNAL
#      type: apiKey        # ONLY EXTERNAL
#      in: header          # ONLY EXTERNAL
#      name: x-api-key     # ONLY EXTERNAL

#security:                 # ONLY EXTERNAL
#  - ApiKeyAuth: [] # use the same name as under securitySchemes    # ONLY EXTERNAL
              
